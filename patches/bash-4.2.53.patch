diff -ru bash-4.2.53.orig/expr.c bash-4.2.53/expr.c
--- bash-4.2.53.orig/expr.c	2012-11-01 02:24:54.000000000 +0100
+++ bash-4.2.53/expr.c	2020-04-29 09:14:12.927643400 +0200
@@ -326,7 +326,11 @@
   char ibuf[INT_STRLEN_BOUND (arrayind_t) + 1], *istr;
 
   istr = fmtumax (ind, 10, ibuf, sizeof (ibuf), 0);
+#if defined (ARRAY_VARS)
   vname = array_variable_name (tok, (char **)NULL, (int *)NULL);
+#else
+  vname = tok;
+#endif
 
   llen = strlen (vname) + sizeof (ibuf) + 3;
   lhs = xmalloc (llen);
@@ -1048,8 +1052,8 @@
 	jump_to_top_level (FORCE_EOF);
     }
 
-  ind = -1;
 #if defined (ARRAY_VARS)
+  ind = -1;
   /* Second argument of 0 to get_array_value means that we don't allow
      references like array[@].  In this case, get_array_value is just
      like get_variable_value in that it does not return newly-allocated
@@ -1066,7 +1070,9 @@
       lvalue->tokstr = tok;	/* XXX */
       lvalue->tokval = tval;
       lvalue->tokvar = v;	/* XXX */
+#if defined (ARRAY_VARS)
       lvalue->ind = ind;
+#endif
     }
 	  
   return (tval);
diff -ru bash-4.2.53.orig/subst.c bash-4.2.53/subst.c
--- bash-4.2.53.orig/subst.c	2014-03-31 22:27:53.000000000 +0200
+++ bash-4.2.53/subst.c	2020-04-29 09:20:51.047965000 +0200
@@ -7230,7 +7230,11 @@
   /* If this is a substring spec, process it and add the result. */
   if (want_substring)
     {
+#if defined (ARRAY_VARS)
       temp1 = parameter_brace_substring (name, temp, ind, value, quoted, (tflag & W_ARRAYIND) ? AV_USEIND : 0);
+#else
+      temp1 = parameter_brace_substring (name, temp, ind, value, quoted, 0);
+#endif
       FREE (name);
       FREE (value);
       FREE (temp);
@@ -7254,7 +7258,11 @@
     }
   else if (want_patsub)
     {
+#if defined (ARRAY_VARS)
       temp1 = parameter_brace_patsub (name, temp, ind, value, quoted, (tflag & W_ARRAYIND) ? AV_USEIND : 0);
+#else
+      temp1 = parameter_brace_patsub (name, temp, ind, value, quoted, 0);
+#endif
       FREE (name);
       FREE (value);
       FREE (temp);
@@ -7316,7 +7324,11 @@
 	  FREE (value);
 	  break;
 	}
+#if defined (ARRAY_VARS)
       temp1 = parameter_brace_remove_pattern (name, temp, ind, value, c, quoted, (tflag & W_ARRAYIND) ? AV_USEIND : 0);
+#else
+      temp1 = parameter_brace_remove_pattern (name, temp, ind, value, c, quoted, 0);
+#endif
       free (temp);
       free (value);
       free (name);
diff -ru bash-4.2.53.orig/variables.h bash-4.2.53/variables.h
--- bash-4.2.53.orig/variables.h	2011-02-25 18:07:41.000000000 +0100
+++ bash-4.2.53/variables.h	2020-04-29 09:17:18.672237400 +0200
@@ -384,7 +384,7 @@
 extern void sv_histtimefmt __P((char *));
 #endif /* HISTORY */
 
-#if defined (HAVE_TZSET) && defined (PROMPT_STRING_DECODE)
+#if defined (HAVE_TZSET)
 extern void sv_tz __P((char *));
 #endif
 
